<Window x:Class="AppClient.View.CarListView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:local="clr-namespace:AppClient.View"
        xmlns:components="clr-namespace:AppClient.Components"
        xmlns:vm="clr-namespace:AppClient.ViewModels"
        mc:Ignorable="d"
        Title="Car List" Height="450" Width="900"
        DataContext="{Binding RelativeSource={RelativeSource Self}}">

    <!--<Window.Resources>
        <DataTemplate DataType="{x:Type vm:CarListItemViewModel}">
            <components:CarListItem/>
        </DataTemplate>
    </Window.Resources>-->

    
    <Grid Background="LightGray" Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>

        <Button Grid.Column="0" Content="Refresh" Command="{Binding LoadCarsCommand}"/>
        <TextBox Grid.Column="1" Text="{Binding SearchQuery, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="200" VerticalAlignment="Center"/>
        <Button Grid.Column="2" Content="Search" Command="{Binding SearchCommand}" Margin="10 0 0 0"/>

        <ListView Grid.Column="1" Grid.Row="1" ItemsSource="{Binding Cars}" HorizontalContentAlignment="Center" SelectionMode="Single" SelectedItem="{Binding SelectedCar}"
            ScrollViewer.HorizontalScrollBarVisibility="Disabled"
            ScrollViewer.VerticalScrollBarVisibility="Auto"
            FocusVisualStyle="{x:Null}"
            BorderThickness="0">

            <ListBox.ItemContainerStyle>
                <Style TargetType="{x:Type ListBoxItem}">
                    <Style.Resources>
                        <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="#DDD"/>
                        <SolidColorBrush x:Key="SelectedBorderBrush" Color="#DDD"/>
                        <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#FFF4F4F4"/>
                        <SolidColorBrush x:Key="DisabledBorderBrush" Color="#FFD9D9D9"/>
                    </Style.Resources>
                    <Setter Property="Padding" Value="2,0,0,0"/>
                    <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                    <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="BorderBrush" Value="Transparent"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                <Border x:Name="Border" Padding="2" SnapsToDevicePixels="true">
                                    <ContentPresenter />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="true">
                                        <Setter TargetName="Border" Property="Background" Value="{DynamicResource SelectedBackgroundBrush}" />
                                        <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource SelectedBorderBrush}" />
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsSelected" Value="true"/>
                                            <Condition Property="Selector.IsSelectionActive" Value="false"/>
                                        </MultiTrigger.Conditions>
                                        <Setter TargetName="Border" Property="Background" Value="{DynamicResource DisabledBackgroundBrush}"/>
                                        <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}"/>
                                    </MultiTrigger>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter TargetName="Border" Property="Background" Value="#CCC"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListBox.ItemContainerStyle>
            <ListView.ItemTemplate>
                <DataTemplate>
                    <components:CarListItem/>
                </DataTemplate>
            </ListView.ItemTemplate>
            <ListBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <UniformGrid Columns="3"/>
                </ItemsPanelTemplate>
            </ListBox.ItemsPanel>

        </ListView>
    </Grid>
</Window>